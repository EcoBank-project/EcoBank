<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecobank.app.challenge.mapper.ChallMapper">
	<!-- 챌린지 전체 조회 - 관리자-->
	<select id="selectChallAll" resultType="ChallVO">
	    SELECT chall_no
	         , chall_title
	         , chall_content
	         , chall_startAt
	         , chall_closeAt
	         , chall_state
	         , main_img
	         , detail_img
	         , chall_score
	         , chall_createAt
	    FROM (
	            SELECT ROWNUM r
	                 , c.chall_no
	                 , c.chall_title
	                 , c.chall_content
	                 , c.chall_startAt
	                 , c.chall_closeAt
	                 , c.chall_state
	                 , c.main_img
	                 , c.detail_img
	                 , c.chall_score
	                 , c.chall_createAt
	            FROM chall c
	            WHERE ROWNUM 	<![CDATA[<=  ]]> #{pageNum} * #{amount}
	            ORDER BY c.chall_no DESC
	    )
	    WHERE r > (#{pageNum} - 1) * #{amount}
	</select>
	
	<!-- 챌린지 목록 개수 -->
	<select id="getTotal" resultType="int">
		SELECT count(*)
		FROM chall
	</select>
	
	<!-- 챌린지 상태별로 전체 조회 - 회원 -->
	<select id="getChallList" resultType="ChallVO" parameterType="map">
		SELECT chall_no
		        , chall_title
		        , chall_content
		        , chall_startAt
		        , chall_closeAt
		        , chall_state
		        , main_img
		FROM chall
		WHERE chall_state = #{challVO.challState}
		<if test="challVO.challTitle != null and challVO.challTitle != ''.toString()">
			AND chall_title like '%' || #{challVO.challTitle} || '%' 
		</if>
		ORDER BY chall_no DESC
	</select>
	
	<!-- 챌린지 개수 가져오기 -->
	<select id="countAllChallenges" resultType="int">
		SELECT count(*)
		FROM chall
		WHERE chall_state = #{challState}
		<if test="challTitle != null and challTitle != ''.toString()">
			AND chall_title like '%' || #{challTitle} || '%' 
		</if>
	</select>
	
	<!-- 단건조회 - 관리자 -->
	<select id="selectChallInfo" resultType="ChallVO" parameterType="ChallVO">
		SELECT chall_no
				, chall_title
				, chall_content
				, chall_createAt
				, chall_startAt
				, chall_closeAt
				, main_img
		        , detail_img
				, chall_state
				, chall_score
		FROM chall
		WHERE chall_no = #{challNo}
	</select>
	
	<!-- 챌린지 좋아요 개수 -->
	<select id="challLikeTotalCnt" parameterType="int">
		SELECT COUNT(*)
		FROM chall_like
		WHERE chall_no = #{challNo}
	</select>
	
	<!-- 챌린지 좋아요 여부 -->
	<select id="challLikeStatus" parameterType="int">
		SELECT COUNT(*)
		FROM chall_like
		WHERE chall_no = #{challNo}
		AND user_no = #{userNo}
	</select>
	
	<!-- 챌린지 좋아요 등록 -->
	<insert id="insertChallLike" parameterType="ChallVO">
		<selectKey keyProperty="challLikeNo" 
					resultType="Integer"
					order="BEFORE">
			SELECT NVL(MAX(chall_like_no), 0) + 1
			FROM chall_like
		</selectKey>
		INSERT INTO chall_like(
								chall_like_no
								, user_no
								, chall_no
								)
		VALUES (#{challLikeNo}
				, #{userNo}
				, #{challNo}
				)
	</insert>
	
	<!-- 챌린지 좋아요 삭제 -->
	<delete id="deleteChallLike" parameterType="int">
		DELETE FROM chall_like
		WHERE user_no = #{userNo}
		AND chall_no = #{challNo}
	</delete>
	
	<!-- 등록 -->
	<insert id="insertChallInfo" parameterType="ChallVO">
		<selectKey keyProperty="challNo"
			resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(chall_no), 0) + 1
			FROM chall
		</selectKey>
		INSERT INTO chall(
							chall_no
							, chall_title
							, chall_content
							, chall_startAt
		        			, chall_closeAt
							, main_img
							, detail_img
							, chall_score

						)
		VALUES 			(
							#{challNo}
							, #{challTitle}
							, #{challContent}
							, #{challStartAt}
							, #{challCloseAt}
							, #{mainImg}
							, #{detailImg}
							, #{challScore}
						)		
	</insert>
	
	<update id="updateChallInfo" parameterType="ChallVO">
		UPDATE chall
		SET chall_title = #{challTitle}
			, chall_content = #{challContent}
			, chall_startAt = #{challStartAt}
			, chall_closeAt = #{challCloseAt}
			, chall_updateAt = #{challUpdateAt}
			<if test="mainImg != null and mainImg != ''">
			, main_img = #{mainImg}
			, detail_img = #{detailImg}
			</if>
			
		WHERE chall_no = #{challNo}
	</update>
	
	<delete id="deleteChallInfo" parameterType="int">
		DELETE FROM chall
		WHERE chall_no = #{challNo}
	</delete>
	
	<select id="selectScoreAll" resultType="Map">
		SELECT DISTINCT s.score_no "scoreNo"
				, f.user_no "userNo"
				, c.chall_title "challTitle"
				, s.confirm_count "confirmCount"
				, TO_CHAR(c.chall_startAt, 'YYYY/MM/DD')|| ' - ' || TO_CHAR(c.chall_closeAt, 'YYYY/MM/DD') "term"
				, s.confirm_count * 10 "score"
		FROM score s JOIN chall c
		               ON s.chall_no = c.chall_no            
		             JOIN chall_confirm f
		               ON s.user_no = f.user_no
		ORDER BY s.score_no DESC
	</select>
	
	<select id="orderByLike">
		SELECT c.*
		FROM chall c
		LEFT JOIN (
		    SELECT chall_no, COUNT(chall_like_no) AS like_count
		    FROM chall_like
		    GROUP BY chall_no
		) cl ON c.chall_no = cl.chall_no
		WHERE c.chall_state = 'D2'
		ORDER BY COALESCE(cl.like_count, 0) DESC
	</select>
	
	<select id="orderByEnter" parameterType="int">
		SELECT c.*
		FROM chall c
		INNER JOIN chall_enter cp ON c.chall_no = cp.chall_no
		WHERE cp.user_no = #{userNo}
		AND c.chall_state = 'D2'
	</select>
	
	<select id="orderByDate">
		SELECT *
		FROM chall
		WHERE chall_state = 'D2'
		ORDER BY chall_createAt DESC
	</select>
	
</mapper>