<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecobank.app.admin.mapper.AdminMapper">
		
		<!-- 챌린지 신고 목록 조회  -->
		<select id="ChallDeclareList" resultType="com.ecobank.app.admin.service.ChallDeclareVO">
			SELECT  confirm_declare_no,
					get_codename(confirm_declare_type)   confirm_declare_type,
					confirm_declareat,
					confirm_user_no,
					b.confirm_no,
					b.user_no 
            FROM  chall_confirm_declare a join chall_confirm b
                on a.confirm_no = b.confirm_no
		</select>
		<!-- 챌린지 신고 삭제  -->
		<delete id="deleteChallDeclare">
    DELETE FROM chall_confirm_declare
    WHERE confirm_declare_no = #{confirmDeclareNo}
		</delete>
		
		<select id="selectSns" resultType="SnsVO"  >
WITH RankedSns AS (
    SELECT s.feed_no,
           u.profile_img,
           u.nickname,
           s.feed_createAt,
           s.user_no,
           s.feed_state,
           a.declare_no,
           a.declareat,
           a.confirm_user_no,
           a.declare_code,
           ROW_NUMBER() OVER (PARTITION BY s.feed_no ORDER BY s.feed_createAt DESC) AS rn
    FROM sns s
    JOIN users u ON s.user_no = u.user_no
    JOIN sns_declare a ON s.feed_no = a.feed_no
)
SELECT feed_no,
       profile_img,
       nickname,
       feed_createAt,
       user_no,
       feed_state,
       declare_no,
       declareat,
       confirm_user_no,
       declare_code
FROM RankedSns
WHERE rn = 1
   
      </select>
		
				
		<!-- sns 신고 목록 -->
	<select id="SnsDeclare" parameterType="int" resultType="map">
    SELECT DECLARE_NO,
           DECLAREAT,
           CONFIRM_USER_NO,
           DECLARE_CODE,
           FEED_NO
    FROM sns_declare
	</select>
		

		
	 <update id="updatefeedState">
		UPDATE sns
        SET FEED_STATE = #{feedState}
        WHERE FEED_NO = #{feedNo}
	</update>

	
	<select id="getCountBychallNos" parameterType="int" resultType="int">
 	SELECT COUNT(*)
    FROM chall_confirm_declare
    WHERE confirm_no = #{confirmNo}
	</select>

    
   <select id="selectChallDeclare" parameterType="int" resultType="map">
     select confirm_no "confirmNo"
	     ,a.user_no "userNo"
	     ,confirm_content "confirmContent"
	     ,chall_title	"challTitle"
	     ,chall_content "challContent"
	from chall_confirm a join chall b on a.chall_no = b.chall_no
	where confirm_no = #{confirmNo}
    </select>
    
    <select id="selectChallCount" resultType="map">
    	select a.user_no,
       count(*) cnt, 
       count( case b.CONFIRM_DECLARE_SITUATION when 'N1' then 1 else  null end) N1,
       count( case b.CONFIRM_DECLARE_SITUATION when 'N2' then 1 else  null end) N2
		from chall_confirm a
		join chall_confirm_declare b 
		on a.confirm_no = b.confirm_no
		group by a.user_no 
    </select>

<!-- 댓글조회 -->
 <select id="selectRepliesByFeedNo" parameterType="int" resultType="com.ecobank.app.admin.service.adminSnsVO">
      
  SELECT s.reply_no, 
       s.reply_content, 
       s.user_no, 
       s.reply_createat, 
       s.feed_no, 
       s.sns_situation,
       a.declare_no,
       a.declareat,
       a.confirm_user_no,
       a.declare_code
FROM sns_reply s
JOIN sns_declare a ON s.feed_no = a.feed_no
WHERE s.feed_no = #{feedNo}


    </select>
    <!--qna전체조회-->
    <select id="qnaUser" resultType="com.ecobank.app.QnA.service.QnaVO">
		select qna_no,qna_title
		from QnA
	</select>
	<!--qna단건조회-->
	<select id="qnaSelectInfo" parameterType="Integer" resultType="com.ecobank.app.QnA.service.QnaVO">
        SELECT qna_no, qna_content, qna_title, qna_createat, user_no
        FROM qna
        WHERE qna_no = #{qnaNo}
    </select>
    <!-- QNA 답글 -->
    <select id="qnaReplySelect" parameterType="Integer" resultType="com.ecobank.app.QnA.service.QnaVO">
  select 
  qna_reply_no,
  qna_reply_content,
  qna_replyat,
  qna_no
	from qna_reply
	where qna_no = #{qnaNo}
    </select>
    <!-- QNA등록 -->
    <insert id ="insertqnareplyInfo" parameterType="QnaVO">
    INSERT INTO qna_reply(qna_reply_no, qna_reply_content, qna_no)
    VALUES (qna_reply_seq.NEXTVAL, #{qnaReplyContent}, #{qnaNo})
    </insert>
    <delete id = "deleteqnadeclare">
    delete from qna_reply
	where qna_reply_no = #{qnaReplyno}
    </delete>
    <update id = "updateQnaReplyInfo" parameterType="ChallVo">
     UPDATE QNA_REPLY 
    set qna_reply_content = #{qnaReplyContent}
    where qna_reply_no = #{qnaReplyNo}
    </update>
	<select id="qnaReplynocount" parameterType="int" resultType="int">
		select count(*)
		from qna a join qna_reply b
  		on a.qna_no != b.qna_no
	</select>
	
</mapper>